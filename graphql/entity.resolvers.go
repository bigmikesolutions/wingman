package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/bigmikesolutions/wingman/graphql/generated"
	"github.com/bigmikesolutions/wingman/graphql/model"
)

// FindClusterByID is the resolver for the findClusterByID field.
func (r *entityResolver) FindClusterByID(ctx context.Context, id string) (*model.Cluster, error) {
	panic(fmt.Errorf("not implemented: FindClusterByID - findClusterByID"))
}

// FindDatabaseByID is the resolver for the findDatabaseByID field.
func (r *entityResolver) FindDatabaseByID(ctx context.Context, id string) (*model.Database, error) {
	panic(fmt.Errorf("not implemented: FindDatabaseByID - findDatabaseByID"))
}

// FindEnvironmentByID is the resolver for the findEnvironmentByID field.
func (r *entityResolver) FindEnvironmentByID(ctx context.Context, id string) (*model.Environment, error) {
	panic(fmt.Errorf("not implemented: FindEnvironmentByID - findEnvironmentByID"))
}

// FindPodByID is the resolver for the findPodByID field.
func (r *entityResolver) FindPodByID(ctx context.Context, id string) (*model.Pod, error) {
	panic(fmt.Errorf("not implemented: FindPodByID - findPodByID"))
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: FindUserByID - findUserByID"))
}

// Entity returns generated.EntityResolver implementation.
func (r *Resolver) Entity() generated.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
