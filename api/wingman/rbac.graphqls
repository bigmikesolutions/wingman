extend schema @link(url: "https://specs.apollo.dev/federation/v2.4", import: ["@key", "@shareable"])

scalar UserRoleID
scalar UserRoleBindingID

extend type Mutation {
    addUserRoleBinding(input: AddUserRoleBindingInput!): AddUserRoleBindingPayload!
}

type UserRole @key (fields: "id"){
    id: UserRoleID!

    accessType: AccessType!

    description: String
    createdAt: Time!
    modifiedAt: Time
}

type UserRoleBinding @key (fields: "id") {
    id: UserRoleBindingID
    userID: UserID!
    userRoles: [UserRole!] @goField(forceResolver: true)

    description: String
    createdAt: Time!
    modifiedAt: Time
}

input NewUserRoleBindingData {
    userID: UserID!
    roleIDs: [UserRoleID!]!
    description: String
}

input AddUserRoleBindingInput {
    mutationID: String
    bindings: [NewUserRoleBindingData!]!
}

type AddUserRoleBindingPayload {
    mutationID: ID
    bindings: [UserRoleBinding!]!
    error: AddUserRoleBindingOutputError
}

type AddUserRoleBindingOutputError {
    code: AddUserRoleBindingClientErrorCode!
    message: String
}

enum AddUserRoleBindingClientErrorCode {
    INVALID_INPUT
    USER_NOT_FOUND
    USER_ROLE_NOT_FOUND
    PROVIDER_ERROR
    GENERIC_ERROR
}
