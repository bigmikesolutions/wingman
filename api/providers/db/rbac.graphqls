extend schema @link(url: "https://specs.apollo.dev/federation/v2.4", import: ["@key", "@shareable"])
extend schema @link(url: "../../wingman/shared.graphqls")

extend type Mutation {
    addDatabaseUserRole(input: AddDatabaseUserRoleInput!): AddDatabaseUserRolePayload!
}

extend type UserRole {
    databases: [DatabaseAccess]
}

type DatabaseTableAccess  {
    name: String!
    columns: [String]
    accessType: AccessType!
}

type DatabaseAccess  {
    id: String!
    tables: [DatabaseTableAccess!]
}

input DatabaseTableAccessInput  {
    name: String!
    columns: [String]
    accessType: AccessType!
}

input DatabaseAccessInput  {
    id: String!
    tables: [DatabaseTableAccessInput]
}

input AddDatabaseUserRole {
    id: String
    description: String
    databaseAccess: [DatabaseAccessInput]
}

input AddDatabaseUserRoleInput {
    mutationId: String
    userRoles: [AddDatabaseUserRole!]!
}

type AddDatabaseUserRolePayload {
    mutationId: ID
    userRoles: [UserRole]
    error: AddDatabaseUserRoleError
}

type AddDatabaseUserRoleError {
    code: AddDatabaseUserRoleClientErrorCode!
    message: String
}

enum AddDatabaseUserRoleClientErrorCode {
    INVALID_INPUT
    USER_NOT_FOUND
    USER_ROLE_NOT_FOUND
    PROVIDER_ERROR
    GENERIC_ERROR
}


