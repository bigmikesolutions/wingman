version: "3"
services:

  wingman:
    container_name: wingman_server
    build:
      context: .
      args:
        CMD_PATH: "./cmd/server"
    ports:
      - "8081:8080"
    environment:
      - LOG_LEVEL=debug
      - HTTP_PORT=8080
      - DB_HOST=postgres
      - DB_DATABASE=wingman
      - DB_USERNAME=admin
      - DB_PASSWORD=pass
      - A10N_PRIVATE_KEY_PATH=/certs/private.pem
      - A10N_PUBLIC_KEY_PATH=/certs/public.pem
      - VAULT_ADDRESS=http://vault:8200
      - VAULT_TOKEN=root
    volumes:
      - ./test/api:/certs
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8080/probes/health || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  postgres:
    container_name: wingman_postgres
    image: postgres
    environment:
      - POSTGRES_DB=wingman
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
      - listen_addresses='*'
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d wingman" ]
      interval: 10s
      timeout: 20s
      retries: 3

  migrations:
    container_name: wingman_migration
    build: migrations
    entrypoint: "/bin/bash -c 'while ! (echo > /dev/tcp/postgres/5432) > /dev/null 2>&1; do sleep 1; done; /flyway/flyway migrate'"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/wingman
      - FLYWAY_USER=admin
      - FLYWAY_PASSWORD=pass

  vault:
    container_name: wingman_vault
    image: hashicorp/vault:1.18
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8200
    healthcheck:
      test: ["CMD-SHELL", "vault status || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    container_name: wingman_keycloak
    command: ["start-dev"]
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: pass
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pass
    healthcheck:
      test: [ "CMD-SHELL", "echo > /dev/tcp/keycloak/8080 > /dev/null 2>&1"]
      interval: 10s
      timeout: 20s
      retries: 3
    ports:
      - "8082:8080"

  terraform:
    image: hashicorp/terraform:latest
    container_name: wingman_terraform
    entrypoint: ["sh", "-c", "terraform init && terraform apply -var-file=vars/local.tfvars -auto-approve"]
    working_dir: /workspace
    volumes:
      - ./terraform:/workspace
    depends_on:
      keycloak:
        condition: service_healthy

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: wingman_oauth2_proxy
    environment:
      OAUTH2_PROXY_PROVIDER: "oidc"
      OAUTH2_PROXY_OIDC_ISSUER_URL: "http://keycloak:8080/realms/wingman"
      OAUTH2_PROXY_OIDC_INSECURE_SKIP_VERIFY: "true"
      OAUTH2_PROXY_CLIENT_ID: "wingman"
      OAUTH2_PROXY_CLIENT_SECRET: "secret-123"
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:4180/oauth2/callback"
      OAUTH2_PROXY_UPSTREAMS: "http://wingman:8081"
      OAUTH2_PROXY_SCOPE: "openid profile email"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_COOKIE_SECRET: "supersecretkey-1"
      OAUTH2_PROXY_SKIP_AUTHENTICATED_EMAILS: "true"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_SHOW_DEBUG_ON_ERROR: "true"
      OAUTH2_PROXY_AUTH_LOGGING: "true"
      OAUTH2_PROXY_LOG_LEVEL: "debug"
    ports:
      - "4180:4180"
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
