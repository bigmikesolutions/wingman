version: "3"
services:

  postgres:
    container_name: wingman_postgres
    image: postgres
    environment:
      - POSTGRES_DB=wingman
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
      - listen_addresses='*'
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d wingman" ]
      interval: 10s
      timeout: 20s
      retries: 3

  migrations:
    container_name: wingman_migration
    build: migrations
    entrypoint: "/bin/bash -c 'while ! (echo > /dev/tcp/postgres/5432) > /dev/null 2>&1; do sleep 1; done; /flyway/flyway migrate'"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/wingman
      - FLYWAY_USER=admin
      - FLYWAY_PASSWORD=pass

  vault:
    container_name: wingman_vault
    image: hashicorp/vault:1.18
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8200
    healthcheck:
      test: ["CMD-SHELL", "vault status || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    container_name: wingman_keycloak
    command: ["start-dev"]
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: pass
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pass
    healthcheck:
      test: [ "CMD-SHELL", "echo > /dev/tcp/keycloak/8080 > /dev/null 2>&1"]
      interval: 10s
      timeout: 20s
      retries: 3
    ports:
      - "8081:8080"

  terraform:
    image: hashicorp/terraform:latest
    container_name: wingman_terraform
    entrypoint: ["sh", "-c", "terraform init && terraform apply -var-file=vars/local.tfvars -auto-approve"]
    working_dir: /workspace
    volumes:
      - ./terraform:/workspace
    depends_on:
      keycloak:
        condition: service_healthy

#  localstack:
#    container_name: wingman_localstack
#    image: localstack/localstack
#    ports:
#      - "4566:4566"
#      - "4510-4559:4510-4559"
#    environment:
#      - SERVICES=cognito
#      - DEBUG=1
#      - AWS_DEFAULT_REGION=eu-west-1
#      - EDGE_PORT=4566
