version: "3"
services:

  wingman:
    container_name: wingman_server
    build:
      context: .
      args:
        CMD_PATH: "./cmd/server"
    ports:
      - "8081:8080"
    environment:
      - LOG_LEVEL=debug
      - HTTP_PORT=8080
      - DB_HOST=postgres
      - DB_DATABASE=wingman
      - DB_USERNAME=admin
      - DB_PASSWORD=pass
      - A10N_PRIVATE_KEY_PATH=/certs/private.pem
      - A10N_PUBLIC_KEY_PATH=/certs/public.pem
      - VAULT_ADDRESS=http://vault:8200
      - VAULT_TOKEN=root
    volumes:
      - ./test/api:/certs
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8080/probes/health || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wingman.rule=Host(`wingman`)"
      - "traefik.http.services.wingman.loadbalancer.server.port=8080"
      - "traefik.http.routers.wingman.middlewares=traefik-auth"

  postgres:
    container_name: wingman_postgres
    image: postgres
    environment:
      - POSTGRES_DB=wingman
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
      - listen_addresses='*'
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d wingman" ]
      interval: 10s
      timeout: 20s
      retries: 3

  migrations:
    container_name: wingman_migration
    build: migrations
    entrypoint: "/bin/bash -c 'while ! (echo > /dev/tcp/postgres/5432) > /dev/null 2>&1; do sleep 1; done; /flyway/flyway migrate'"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - FLYWAY_URL=jdbc:postgresql://postgres:5432/wingman
      - FLYWAY_USER=admin
      - FLYWAY_PASSWORD=pass

  terraform:
    image: hashicorp/terraform:latest
    container_name: wingman_terraform
    entrypoint: ["sh", "-c", "terraform init && terraform apply -var-file=vars/local.tfvars -auto-approve"]
    working_dir: /workspace
    volumes:
      - ./terraform:/workspace
    depends_on:
      keycloak:
        condition: service_healthy

  vault:
    container_name: wingman_vault
    image: hashicorp/vault:1.18
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8200
    healthcheck:
      test: ["CMD-SHELL", "vault status || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 3

  keycloak:
    image: quay.io/keycloak/keycloak:26.1
    container_name: wingman_keycloak
    command: ["start-dev"]
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: pass
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: pass
    healthcheck:
      test: [ "CMD-SHELL", "echo > /dev/tcp/keycloak/8080 > /dev/null 2>&1"]
      interval: 10s
      retries: 3
      timeout: 10s
    ports:
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak`)"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

  traefik:
    image: traefik:v2.10
    container_name: wingman_traefik
    command:
      - "--api.insecure=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.forwardedHeaders.trustedIPs=0.0.0.0/0"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--accessLog=true"
    ports:
      - "8084:80"
      - "8085:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  traefik-auth:
    image: thomseddon/traefik-forward-auth
    container_name: wingman_traefik-auth
    command:
      - --log-level=debug
      - --insecure-cookie
      - --secret=secret-123
      - --default-provider=oidc
      - --auth-host="traefik-auth:4181"
      - --url-path=/oauth2/callback
      - --providers.oidc.issuer-url=http://keycloak:8080/realms/wingman
      - --providers.oidc.client-id=wingman
      - --providers.oidc.client-secret=secret-123
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "4181:4181"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik-auth.loadbalancer.server.port=4181"
      - "traefik.http.middlewares.traefik-auth.forwardauth.address=http://traefik-auth:4181/oauth2/callback"
      - "traefik.http.middlewares.traefik-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.traefik-auth.forwardauth.authResponseHeaders=X-Auth-User,X-Auth-Email,X-Forwarded-User,X-Forwarded-Proto,X-Forwarded-Host"
